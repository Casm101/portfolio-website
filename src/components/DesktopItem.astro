---
import '../styles/global.css';

interface Props {
  label: string;
  icon: string;
  type?: 'image';
}

const { label, icon, type } = Astro.props;
const itemId = label.replace(' ', '-');

let typeClass;
switch (type) {
  case 'image':
    typeClass = 'image';
    break;
  default:
    break;
}
---

<div data-desktop-item data-id={itemId} class={["desktopItem-styled", typeClass].join(' ')}>
  <div class="icon">

    <!-- TODO: replace with astro image or astro picture component -->
    <img src={icon} alt={`${label} icon`} class="iconImage">
  </div>
  <div class="label">{label}</div>
</div>

<style>
  .desktopItem-styled {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 4px;

    pointer-events: all;
    user-select: none;
    
    .icon {
      width: 84px;
      aspect-ratio: 1 / 1;
      
      .iconImage {
        width: 100%;
        object-fit: cover;

        -webkit-user-drag: none;
        user-drag: none;
      }
    }

    .label {
      color: #FFF;
      font-weight: 600;
      text-align: center;
      text-transform: capitalize;
      text-shadow: 0 1px 3px rgba(0, 0, 0, 0.75);

      padding: 2px 4px;
      border-radius: 4px;

      cursor: default;
    }

    &.image {
      .icon {
        width: 84px;
        height: 84px;
        border: 3px solid #FFF;

        .iconImage {
          width: 78px;
          height: 78px;
        }
      }
    }

    &.selected {
      .label {
        background: rgb(41, 99, 217);
      }
    }
  }

  @media screen and (max-width: 480px) {
    .desktopItem-styled {
      .icon {
        width: 48px;
      }

      &.image .icon {
        height: 48px;
        width: 48px;
        border-width: 2px;

        .iconImage {
          height: 44px;
          width: 44px;
        }
      }
    }
  }
</style>